-- Скрипт реализует вывод углов ориентации коптера

-- Упрощение вызова функции взятия абсолютного значения из модуля math
local abs = math.abs
-- Количество светодиодов на базовой плате
local ledNumber = 4
-- Создание порта управления светодиодами
local leds = Ledbar.new(ledNumber)

-- Максимальные значения крена, тангажа и рыскания для удобства вывода информации
local maxRoll, maxPitch, maxYaw = 180, 90, 180

local function getOrientation()
    -- Считывание значений ориентации по 3-м осям
    roll, pitch, yaw = Sensors.orientation() 
    -- Модули этих значений
    roll, pitch, yaw = abs(roll), abs(pitch), abs(yaw)
    -- Вывод крена на 1-й светодиод с помощью уровня интенсивности зеленого цвета
    leds:set(0, 0, roll / maxRoll, 0)
    --[[ Вывод рыскания на 2-й и 3-й светодиоды с помощью уровня интенсивности фиолетового цвета.
    Пока дигатели не запущены Пионер калибруется, поэтому будет выводиться только изменение угла, 
    с запущенными двигателями будет выводиться непосредственно ориентация ]]
    leds:set(1, yaw / maxYaw, 0, yaw / maxYaw)
    leds:set(2, yaw / maxYaw, 0, yaw / maxYaw)
    -- Вывод тангажа на 4-й светодиод с помощью уровня интенсивности синего цвета
    leds:set(3, 0, 0, pitch / maxPitch)
end

-- Обязательная функция обработки событий
function callback (event)
end

-- Создание таймера, вызывающего функцию каждую 0.1 секунды
getOrientationTimer = Timer.new(0.1, function () getOrientation() end)
-- Запуск таймера
getOrientationTimer:start()