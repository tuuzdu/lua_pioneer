-- Скрипт реализует вывод показаний акселерометра

-- Упрощение вызова функции взятия абсолютного значения из модуля math
local abs = math.abs
-- Количество светодиодов на базовой плате
local ledNumber = 4
-- Создание порта управления светодиодами
local leds = Ledbar.new(ledNumber)

-- Функция считывания данных с акселерометра и вывода их на светодиоды
local function getAccel()
    -- Считывание данных с акселерометра 
    ax, ay, az = Sensors.accel()
    -- Модули этих значений
    ax, ay, az = abs(ax), abs(ay), abs(az)
    -- Вывод ускорения вдоль оси X на 1-й светодиод с помощью уровня интенсивности зеленого цвета
    leds:set(0, 0, ax % 10 / 10, 0)
    -- Вывод ускорения вдоль оси Z на 2-й и 3-й светодиоды с помощью уровня интенсивности фиолетового цвета
    leds:set(1, az % 10 / 10, 0, az % 10 / 10)
    leds:set(2, az % 10 / 10, 0, az % 10 / 10)
    -- Вывод ускорения вдоль оси Y на 4-й светодиод  помощью уровня интенсивности синего цвета
    leds:set(3, 0, 0, ay % 10 / 10)
    --[[ Учитывается ускорение свободного падения, поэтому в статичном положении светодиоды оси Z горят,
    а при свободном падении перестанут. При повороте коптера вокруг осей X и Y, ускорение свободного
    падения будет проецироваться и на эти оси Пионера, поэтому интенсивность соответствующих светодиодов
    будет расти независимо от движения коптера ]]
end

-- Обязательная функция обработки событий
function callback(event)
end

-- Создание таймера, вызывающего функцию каждую 0.1 секунды
getAccelTimer = Timer.new(0.1, function () getAccel() end)
-- Запуск таймера
getAccelTimer:start()
